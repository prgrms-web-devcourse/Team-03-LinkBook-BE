name: Spring Boot & Gradle & NGINX & Docker CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 기본 체크아웃
      - name: checkout
        uses: actions/checkout@v3

      # JDK version 설정
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # 설정 파일 생성 및 write
      - name: make env file
        run: |
          # 설정 파일 디렉토리로 이동
          cd ./src/main/resources
          
          # application-database.yaml 파일 생성
          touch ./application-database.yaml

          # GitHub-Actions 에서 설정한 값을 application-database.yaml 파일에 쓰기
          echo "${{ secrets.DATABASE }}" >> ./application-database.yaml
          
          # application-jwt.yaml 파일 생성
          touch ./application-jwt.yaml
          
          # GitHub-Actions 에서 설정한 값을 application-jwt.yaml 파일에 쓰기
          echo "${{ secrets.JWT }}" >> ./application-jwt.yaml

        shell: bash

      # Gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar

      # Docker Image 빌드
      - name: Build Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/linkbook-web .
          docker push ${{ secrets.DOCKER_USERNAME }}/linkbook-web

      # 서버에서 어플리케이션 실행 (with Docker)
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            docker stop server
            docker rmi ${{ secrets.DOCKER_USERNAME }}/linkbook-web
            docker pull ${{ secrets.DOCKER_USERNAME }}/linkbook-web
            docker run -d --rm --name server -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/linkbook-web

      # Github Action 성공 여부 Slack 알림 전송
      - name: action-slack
        uses: 8398a7/action-slack@v3.12.0
        with:
          status: ${{ job.status }}
          author_name: Github Action
          fields: message,commit,author,eventName,workflow,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()